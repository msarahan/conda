package:
  name: conda

source:
  path: ../

build:
  # These are present when the new environment is created
  # so we have to exempt them from the list of initial files
  # for conda-build to realize they should be included.
  always_include_files:
    - bin/conda                 [unix]
    - bin/activate              [unix]
    - bin/deactivate            [unix]
    - Scripts/activate.bat      [win]
    - Scripts/deactivate.bat    [win]
    # TODO: are these needed?  They currently break packaging, since these files don't exist yet at build time
    # - Scripts/activate          [win]
    # - Scripts/deactivate        [win]
    # TODO: what about fish and powershell?

  entry_points:
    - conda = conda.cli:main
    - conda-env = conda_env.cli.main:main

requirements:
  build:
    - python
    - pycosat >=0.6.1
  run:
    - python
    - conda-env >=2.6
    - enum34               [py<34]
    - menuinst             [win]
    - pycosat >=0.6.1
    - requests >=2.5.3
    - ruamel_yaml >=0.11.14

test:
  requires:
    - pycrypto
    - pytest
    - pytest-cov
  commands:
    - conda --version
    - conda info
#    - pip install pytest-timeout
#    - python -c "from platform import system as s; import sys; sys.exit(int(s()!='Windows'))" || pushd $SRC_DIR && make clean-all && popd
#    - python -c "from platform import system as s; import sys; sys.exit(int(s()!='Windows'))" || py.test -c $SRC_DIR/setup.cfg $SRC_DIR/tests/ || true
#    # - python -c "from platform import system as s; import sys; sys.exit(int(s()=='Windows'))" || pushd %SRC_DIR% && make clean-all && popd
#    - python -c "from platform import system as s; import sys; sys.exit(int(s()=='Windows'))" || py.test -c %SRC_DIR%/setup.cfg %SRC_DIR%/tests/ || true
#  imports:
#    - conda

about:
  home: http://conda.pydata.org/
  license: BSD
  license_file: LICENSE.txt
  summary: OS-agnostic, system-level binary package manager.
